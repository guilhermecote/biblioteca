/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControlerCliente;
import Controller.ControlerEmprestimos;
import Controller.ControlerObras;
import Model.ClienteBEAN;
import Model.EmprestimosBEAN;
import Model.ObraBEAN;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme Costa
 */
public class EmprestimosView extends javax.swing.JFrame {

    /**
     * Creates new form EmprestimosView
     */
    private List<EmprestimosBEAN> ListaEmprestimosBEANs;

    private ControlerEmprestimos controlerEmprestimos = new ControlerEmprestimos();
    private Integer cadastroOuAtualiza = 0;

    public EmprestimosView() {
        initComponents();
        ativaCampos(true);
        updateTabela();
        preencheListaObras(new ControlerObras().listaObrasAtivas());
        preencheListaClientes(new ControlerCliente().listaClienteesAtivos());
        btnAlterar.setEnabled(false);
        jListObrasAtuais.setEnabled(false);
        jTextFieldClienteAtual.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListObras = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox<>();
        txDtRetorno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListObrasAtuais = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldClienteAtual = new javax.swing.JTextField();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(550, 650));

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txBuscar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txBuscarCaretUpdate(evt);
            }
        });
        txBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txBuscarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Obras:");

        jListObras.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListObras);

        jLabel2.setText("Cliente:");

        jComboBoxCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txDtRetorno.setText("Data de Retorno (dd/MM/aaaa)");
        txDtRetorno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txDtRetornoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txDtRetornoFocusLost(evt);
            }
        });
        txDtRetorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDtRetornoActionPerformed(evt);
            }
        });

        jLabel3.setText("Obras Atuais");

        jListObrasAtuais.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jListObrasAtuais);

        jLabel4.setText("Cliente Atual");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(txBuscar)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2)
                                            .addComponent(jComboBoxCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txDtRetorno, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 133, Short.MAX_VALUE))
                                    .addComponent(jTextFieldClienteAtual))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(145, 145, 145))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnAlterar)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txDtRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConfirmar)
                        .addComponent(btnCancelar))
                    .addComponent(jTextFieldClienteAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txBuscarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txBuscarCaretUpdate
        updateTabela();
    }//GEN-LAST:event_txBuscarCaretUpdate

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        ativaCampos(false);
        txDtRetorno.setText("Data de Retorno (dd/MM/aaaa)");
        btnAlterar.setEnabled(false);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed

        try {
            ativaCampos(true);
            btnAlterar.setEnabled(false);

            EmprestimosBEAN emprestimo = new EmprestimosBEAN();

            List<Integer> obras = new ArrayList();
            for (Integer id : jListObras.getSelectedIndices()) {
                String texto = jListObras.getModel().getElementAt(id);
                obras.add(Integer.parseInt(texto.substring(0, texto.indexOf(" -"))));
            }
            if (txDtRetorno.getText().equals("") || txDtRetorno.getText().equals("Data de Retorno (dd/MM/aaaa)")) {
                emprestimo.setDtRetorno(null);
            } else {
                try {
                    emprestimo.setDtRetorno(convert_StringToDate(txDtRetorno.getText()));
                } catch (Exception e) {
                    updateTabela();
                }
            }
            String cliente = jComboBoxCliente.getSelectedItem().toString();
            Integer idCliente = Integer.parseInt(cliente.substring(0, cliente.indexOf(" -")));
            emprestimo.setId_cliente(idCliente);
            if (cadastroOuAtualiza == 0) {
                controlerEmprestimos.addEmprestimos(emprestimo, obras);
            } else {
                emprestimo.setId_emprestimo(Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString()));
                controlerEmprestimos.updateEmprestimos(emprestimo, obras);
                cadastroOuAtualiza = 0;
            }

            updateTabela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Preencha todos os Campos Corretamente");
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ativaCampos(true);
        btnAlterar.setEnabled(false);
        txDtRetorno.setText("Data de Retorno (dd/MM/aaaa)");
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        btnAlterar.setEnabled(true);
    }//GEN-LAST:event_jTable1FocusGained

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        ativaCampos(false);
        btnAlterar.setEnabled(false);
        cadastroOuAtualiza = 1;
        EmprestimosBEAN emprestimo = controlerEmprestimos.findEmprestimos(Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString()));
        jTextFieldClienteAtual.setText(new ControlerCliente().findCliente(emprestimo.getId_cliente()).getNome_Clientes());

        DefaultListModel listModel = new DefaultListModel();
        jListObrasAtuais.removeAll();
        new ControlerObras().findByEmprestimo(emprestimo.getId_emprestimo()).forEach(autor -> {
            listModel.addElement(autor.getIdObras() + " - " + autor.getNome_Obras());
        });
        jListObrasAtuais.setModel(listModel);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void txDtRetornoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txDtRetornoFocusGained
        if (txDtRetorno.getText().equals("Data de Retorno (dd/MM/aaaa)")) {
            txDtRetorno.setText("");
        }
    }//GEN-LAST:event_txDtRetornoFocusGained

    private void txDtRetornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDtRetornoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDtRetornoActionPerformed

    private void txDtRetornoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txDtRetornoFocusLost
        if (txDtRetorno.getText().equals("")) {
            txDtRetorno.setText("Data de Retorno (dd/MM/aaaa)");
        }
    }//GEN-LAST:event_txDtRetornoFocusLost

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Principal frame = new Principal();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmprestimosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmprestimosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmprestimosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmprestimosView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmprestimosView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> jComboBoxCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListObras;
    private javax.swing.JList<String> jListObrasAtuais;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldClienteAtual;
    private javax.swing.JTextField txBuscar;
    private javax.swing.JTextField txDtRetorno;
    // End of variables declaration//GEN-END:variables

    private void updateTabela() {

        if (txBuscar.getText().isEmpty()) {
            ListaEmprestimosBEANs = new ControlerEmprestimos().listaEmprestimoss();
        } else {
            try {
                Integer buscar = Integer.parseInt(txBuscar.getText());
                ListaEmprestimosBEANs = new ArrayList<>();
                ListaEmprestimosBEANs.add(new ControlerEmprestimos().findEmprestimos(buscar));
            } catch (Exception e) {

            }
        }
        DefaultTableModel model = new DefaultTableModel(null, new String[]{"ID", "Data de Saida", "Data Estimada do Retorno", "Data do Retorno"});
        try {
            jTable1.setModel(model);
            String[] dados = new String[9];
            for (EmprestimosBEAN a : ListaEmprestimosBEANs) {
                dados[0] = String.valueOf(a.getId_emprestimo());
                dados[1] = a.getDtSaida().toString();
                dados[2] = a.getDtVolta().toString();
                dados[3] = a.getDtRetorno() == null ? "" : a.getDtRetorno().toString();
                model.addRow(dados);
            }
        } catch (Exception ex) {

        }

    }

    private void ativaCampos(Boolean ativa) {
        btnNovo.setEnabled(ativa);

        btnCancelar.setEnabled(!ativa);
        btnConfirmar.setEnabled(!ativa);
        txDtRetorno.setEnabled(!ativa);

        txBuscar.setEnabled(ativa);

        jListObras.setEnabled(!ativa);
        jComboBoxCliente.setEnabled(!ativa);
    }

    public static Timestamp convert_StringToDate(String dataStr) {
        Timestamp data = null;
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(format.parse(dataStr));
            data = new Timestamp(calendar.getTimeInMillis());
            //data = format.parse(dataStr);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return data;
    }

    private String dateToString(Date data) {
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");

        String reportDate = df.format(data);

        return reportDate;
    }

    private void preencheListaObras(List<ObraBEAN> lista) {
        DefaultListModel listModel = new DefaultListModel();
        jListObras.removeAll();
        lista.forEach(autor -> {
            listModel.addElement(autor.getIdObras() + " - " + autor.getNome_Obras());
        });
        jListObras.setModel(listModel);
    }

    private void preencheListaClientes(List<ClienteBEAN> lista) {
        jComboBoxCliente.removeAllItems();
        DefaultComboBoxModel listModel = (DefaultComboBoxModel) jComboBoxCliente.getModel();
        lista.forEach(cliente -> {
            listModel.addElement(cliente.getIdClientes() + " - " + cliente.getNome_Clientes());
        });
        jComboBoxCliente.setModel(listModel);
    }
}
