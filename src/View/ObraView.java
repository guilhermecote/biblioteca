/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControlerAutor;
import Controller.ControlerEditora;
import Controller.ControlerObras;
import Model.AutorBEAN;
import Model.EditoraBEAN;
import Model.ObraBEAN;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme Costa
 */
public class ObraView extends javax.swing.JFrame {

    /**
     * Creates new form ObraView
     */
    private List<ObraBEAN> ListaObraBEANs;

    private ControlerObras controlerObra = new ControlerObras();
    private ControlerEditora controlerEditora = new ControlerEditora();
    private ControlerAutor controlerAutor = new ControlerAutor();
    private Integer cadastroOuAtualiza = 0;

    public ObraView() {
        initComponents();
        ativaCampos(true);
        updateTabela();
        preencheListaAutor();
        preencheListaEditoras(new ControlerEditora().listaEditorasAtivos());
        jListAutoresAtuais.setEnabled(false);
        jTextFieldEditoraAtual.setEnabled(false);
        btnAlterar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txNome = new javax.swing.JTextField();
        txEdicao = new JFormattedTextField();
        txAno = new javax.swing.JTextField();
        ckbAtivo = new javax.swing.JCheckBox();
        txBuscar = new javax.swing.JTextField();
        ckbInativos = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListAutores = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxEditora = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListAutoresAtuais = new javax.swing.JList<>();
        jTextFieldEditoraAtual = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(550, 650));

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txNome.setText("Nome");
        txNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txNomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txNomeFocusLost(evt);
            }
        });
        txNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNomeActionPerformed(evt);
            }
        });

        txEdicao.setText("Edição");
        txEdicao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txEdicaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txEdicaoFocusLost(evt);
            }
        });
        txEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txEdicaoActionPerformed(evt);
            }
        });

        txAno.setText("Ano");
        txAno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txAnoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txAnoFocusLost(evt);
            }
        });
        txAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txAnoActionPerformed(evt);
            }
        });

        ckbAtivo.setSelected(true);
        ckbAtivo.setText("Ativo");

        txBuscar.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txBuscarCaretUpdate(evt);
            }
        });

        ckbInativos.setText("Inativos");
        ckbInativos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckbInativosStateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Autores:");

        jListAutores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListAutores);

        jLabel2.setText("Editoras:");

        jComboBoxEditora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jListAutoresAtuais.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jListAutoresAtuais);

        jLabel3.setText("Editora Atual");

        jLabel4.setText("Autores Atuais");

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(ckbInativos))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txAno, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(txNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ckbAtivo)
                                    .addComponent(jLabel2)
                                    .addComponent(txEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxEditora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextFieldEditoraAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNovo)
                            .addComponent(btnAlterar)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ckbAtivo))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEditoraAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar)
                    .addComponent(btnCancelar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckbInativos))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNomeActionPerformed

    private void txEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txEdicaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txEdicaoActionPerformed

    private void txAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txAnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txAnoActionPerformed

    private void txBuscarCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txBuscarCaretUpdate
        updateTabela();
    }//GEN-LAST:event_txBuscarCaretUpdate

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        ativaCampos(false);
        preencheListaAutor();
        preencheListaEditoras(new ControlerEditora().listaEditorasAtivos());
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        try {
            if (verificaCampos()) {
                ativaCampos(true);

                ObraBEAN obra = new ObraBEAN();
                obra.setNome_Obras(txNome.getText());
                obra.setAtivo_Obras(ckbAtivo.isSelected());
                obra.setAno_Obras(Integer.parseInt(txAno.getText()));
                obra.setEdição_Obras(Integer.parseInt(txEdicao.getText()));

                List<Integer> autores = new ArrayList();
                for (Integer id : jListAutores.getSelectedIndices()) {
                    String texto = jListAutores.getModel().getElementAt(id);
                    autores.add(Integer.parseInt(texto.substring(0, texto.indexOf(" -"))));
                }

                String editora = jComboBoxEditora.getSelectedItem().toString();
                obra.setId_editora(Integer.parseInt(editora.substring(0, editora.indexOf(" -"))));
                if (cadastroOuAtualiza == 0) {
                    controlerObra.addObra(obra, autores);
                } else {
                    obra.setIdObras(Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString()));
                    controlerObra.updateObra(obra, autores);
                    cadastroOuAtualiza = 0;
                }
                updateTabela();
                iniciaCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Preencha todos os Campos Corretamente");
            }
        } catch (Exception e) {
 JOptionPane.showMessageDialog(null, "Preencha todos os Campos Corretamente");
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ativaCampos(true);
        iniciaCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txNomeFocusLost
        if (txNome.getText().equals("")) {
            txNome.setText("Nome");
        }
    }//GEN-LAST:event_txNomeFocusLost

    private void txNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txNomeFocusGained
        if (txNome.getText().equals("Nome")) {
            txNome.setText("");
        }
    }//GEN-LAST:event_txNomeFocusGained

    private void txEdicaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txEdicaoFocusGained
        if (txEdicao.getText().equals("Edição")) {
            txEdicao.setText("");
        }
    }//GEN-LAST:event_txEdicaoFocusGained

    private void txEdicaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txEdicaoFocusLost
        if (txEdicao.getText().equals("")) {
            txEdicao.setText("Edição");
        }
    }//GEN-LAST:event_txEdicaoFocusLost

    private void txAnoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txAnoFocusGained
        if (txAno.getText().equals("Ano")) {
            txAno.setText("");
        }
    }//GEN-LAST:event_txAnoFocusGained

    private void txAnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txAnoFocusLost
        if (txAno.getText().equals("")) {
            txAno.setText("Ano");
        }
    }//GEN-LAST:event_txAnoFocusLost

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        btnAlterar.setEnabled(true);
    }//GEN-LAST:event_jTable1FocusGained

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        jTextFieldEditoraAtual.setText("");
        ativaCampos(false);
        preencheListaAutor();
        preencheListaEditoras(new ControlerEditora().listaEditorasAtivos());
        btnAlterar.setEnabled(false);
        cadastroOuAtualiza = 1;

        ObraBEAN obra = controlerObra.findObra(Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString()));

        jTextFieldEditoraAtual.setText(controlerEditora.findEditora(obra.getId_editora()).getNome_Editora());

        DefaultListModel listModel = new DefaultListModel();
        jListAutoresAtuais.removeAll();
        new ControlerAutor().findByObra(obra.getIdObras()).forEach(autor -> {
            listModel.addElement(autor.getIdAutor() + " - " + autor.getNome_Autor());
        });
        jListAutoresAtuais.setModel(listModel);

        txNome.setText(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1).toString());
        ckbAtivo.setSelected(Boolean.valueOf(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 2).toString()));
        txEdicao.setText(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 3).toString());
        txAno.setText(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 4).toString());
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void ckbInativosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckbInativosStateChanged
        updateTabela();
    }//GEN-LAST:event_ckbInativosStateChanged

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Principal frame = new Principal();
        frame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObraView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ObraView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JCheckBox ckbAtivo;
    private javax.swing.JCheckBox ckbInativos;
    private javax.swing.JComboBox<String> jComboBoxEditora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListAutores;
    private javax.swing.JList<String> jListAutoresAtuais;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldEditoraAtual;
    private javax.swing.JTextField txAno;
    private javax.swing.JTextField txBuscar;
    private javax.swing.JTextField txEdicao;
    private javax.swing.JTextField txNome;
    // End of variables declaration//GEN-END:variables

    private void updateTabela() {
        String buscar = txBuscar.getText();

        if (ckbInativos.isSelected()) {
            if (buscar.isEmpty()) {
                ListaObraBEANs = new ControlerObras().listaObras();
            } else {
                ListaObraBEANs = new ArrayList<>();
                ListaObraBEANs.addAll(new ControlerObras().findByNome(buscar));
            }

        } else {
            if (buscar.isEmpty()) {
                ListaObraBEANs = new ControlerObras().listaObrasAtivas();
            } else {
                ListaObraBEANs = new ArrayList<>();
                ListaObraBEANs = new ControlerObras().findByNomeAndAtiva(buscar);
            }

        }
        DefaultTableModel model = new DefaultTableModel(null, new String[]{"ID", "Nome Obra", "Status", "Edição ", "Ano"});
        try {
            jTable1.setModel(model);
            String[] dados = new String[9];
            for (ObraBEAN a : ListaObraBEANs) {
                dados[0] = String.valueOf(a.getIdObras());
                dados[1] = a.getNome_Obras();
                dados[2] = a.getAtivo_Obras().toString();
                dados[3] = String.valueOf(a.getEdição_Obras());
                dados[4] = String.valueOf(a.getAno_Obras());
                model.addRow(dados);
            }
        } catch (Exception ex) {

        }
    }

    private void ativaCampos(Boolean ativa) {
        btnNovo.setEnabled(ativa);

        btnCancelar.setEnabled(!ativa);
        btnConfirmar.setEnabled(!ativa);

        txAno.setEnabled(!ativa);
        txNome.setEnabled(!ativa);
        txEdicao.setEnabled(!ativa);
        txNome.setEnabled(!ativa);

        txBuscar.setEnabled(ativa);

        ckbAtivo.setEnabled(!ativa);

        jListAutores.setEnabled(!ativa);
        jComboBoxEditora.setEnabled(!ativa);
    }

    public boolean verificaCampos() {
        if (txNome.getText().equals("Nome") || txEdicao.getText().equals("Edição")
                || txAno.getText().equals("Ano")) {
            return false;
        }
        return true;
    }

    private void iniciaCampos() {
        txAno.setText("Ano");
        txNome.setText("Nome");
        txEdicao.setText("Edição");
    }

    public static Timestamp convert_StringToDate(String dataStr) {
        Timestamp data = null;
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        try {
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(format.parse(dataStr));
            data = new Timestamp(calendar.getTimeInMillis());
            //data = format.parse(dataStr);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return data;
    }

    private String dateToString(Date data) {
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");

        String reportDate = df.format(data);

        return reportDate;
    }

    private void preencheListaAutor() {
        DefaultListModel listModel = new DefaultListModel();
        jListAutores.removeAll();
        List<AutorBEAN> lista = new ControlerAutor().listaAutoresAtivos();
        lista.forEach(autor -> {
            listModel.addElement(autor.getIdAutor() + " - " + autor.getNome_Autor());
        });
        jListAutores.setModel(listModel);
    }

    private void preencheListaEditoras(ArrayList<EditoraBEAN> lista) {
        jComboBoxEditora.removeAllItems();
        DefaultComboBoxModel listModel = (DefaultComboBoxModel) jComboBoxEditora.getModel();
        lista.forEach(autor -> {
            listModel.addElement(autor.getIdEditora() + " - " + autor.getNome_Editora());
        });
        jComboBoxEditora.setModel(listModel);
    }
}
